{
  "uuid": "e2f2cbbe-06a7-49c3-a6b8-88b08cee43c7",
  "lastMigration": 22,
  "name": "Rendezvous",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3100,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0d80a6ec-6ef7-4aca-aae3-5d16c1e5d8f3",
      "documentation": "Register a new user",
      "method": "post",
      "endpoint": "auth/register",
      "responses": [
        {
          "uuid": "e25c0cff-e25a-43ad-b404-eca7bf3c9910",
          "body": "{\n  \"id\": \"{{objectId}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "User created successfully",
          "headers": [
            {
              "key": "Set-Cookie",
              "value": "access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MmVkMDE0YmJlMTgzNjBjNjEzNDE0MTYiLCJlbWFpbCI6ImpvaG4uZG9lMkBlbWFpbC5jb20iLCJpYXQiOjE2NTk2OTk1MzEsImV4cCI6MTY2NzQ3NTUzMX0.0k5YnMlQKBc7Ihl17OMXNfs-kMznhIsS5ZWFXz3bsrs; Path=/; HttpOnly; Secure; SameSite=None"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75f6c98e-06cf-4955-9b95-c57e722ddf3f",
          "body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        \"name should not be empty\",\n        \"name must be a string\",\n        \"email should not be empty\",\n        \"email must be a string\",\n        \"password should not be empty\",\n        \"password must be a string\"\n    ],\n    \"error\": \"Bad Request\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "No body is specified",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2b781ee-a7da-4c8a-9d44-4c9e7d2377ce",
          "body": "{\n    \"statusCode\": 400,\n    \"message\": \"user with this email address already exists\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "User with email address already exists",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c618d35-ff7b-441e-8972-d9a323d36b0c",
      "documentation": "Authenticating a user",
      "method": "post",
      "endpoint": "auth/login",
      "responses": [
        {
          "uuid": "59499cbe-70d0-48ce-9ec6-fee774fd0008",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "User authenticated successfully",
          "headers": [
            {
              "key": "Set-Cookie",
              "value": "access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MmVkMDE0YmJlMTgzNjBjNjEzNDE0MTYiLCJlbWFpbCI6ImpvaG4uZG9lMkBlbWFpbC5jb20iLCJpYXQiOjE2NTk2OTk1MzEsImV4cCI6MTY2NzQ3NTUzMX0.0k5YnMlQKBc7Ihl17OMXNfs-kMznhIsS5ZWFXz3bsrs; Path=/; HttpOnly; Secure; SameSite=None"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4b9195f9-300a-4f73-b72a-b36f3fb36fe5",
          "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Bad email and password combination",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c797b3c1-04e9-49b6-a0cc-e73bdaedeb11",
      "documentation": "Send a friend request",
      "method": "post",
      "endpoint": "friendships",
      "responses": [
        {
          "uuid": "e65ce610-6bb4-48f4-85ff-169024c8684f",
          "body": "{\n  \"id\": \"{{objectId}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Friend request sent successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e083f6c9-a1b4-4df2-b810-31ebfe5018f2",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friend user not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friend user not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f3a0b98-d3de-4745-bb88-3e76103f396b",
          "body": "{\n    \"statusCode\": 400,\n    \"message\": \"friendship exists\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Friendship exists",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc687513-57e3-4afc-aa5c-2ac896074311",
      "documentation": "Get user friendships",
      "method": "get",
      "endpoint": "friendships",
      "responses": [
        {
          "uuid": "89876523-8c1e-4336-8c00-b6b6702f99c9",
          "body": "{\n  \"friendships\": [\n    {{#repeat 5 comma=true}}\n    {\n      \"id\": \"{{objectId}}\",\n      \"userId\": \"{{objectId}}\"\n    }\n    {{/repeat}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Friendships retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57a0c7dc-9133-4a6c-8ff4-901ad3c05240",
      "documentation": "Accept a friend request",
      "method": "patch",
      "endpoint": "friendships/:friendshipId/accept",
      "responses": [
        {
          "uuid": "3192400b-e24b-485a-889e-f797bdf80134",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Friend request successfully accepted",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80752289-36b1-4902-9470-9880bfe8fa2b",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33fca2e2-d18f-447d-a999-79300b824be1",
          "body": "{\n    \"statusCode\": 403,\n    \"message\": \"user doesn't have permission to accept this friendship\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "User lacks permission",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51fe83aa-d9dc-4d69-9727-fe319205d5fb",
          "body": "{\n    \"statusCode\": 400,\n    \"message\": \"friendship already accepted\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Friendship already accepted",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8ef534ec-3e4c-4ac1-a749-eb9a66ab27e2",
      "documentation": "Delete a friendship",
      "method": "delete",
      "endpoint": "friendships/:friendshipId",
      "responses": [
        {
          "uuid": "40408977-bbe2-4c12-becd-a0fa316511f3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Friendship successfully deleted",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8857ec95-d418-40cc-8ec6-8dd8141e2991",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f8b4331-0485-4f88-9ed1-97f506324326",
      "documentation": "Send a message to a friend",
      "method": "post",
      "endpoint": "friendships/:friendshipId/messages",
      "responses": [
        {
          "uuid": "f677e206-cc82-477d-af56-d3974b43261e",
          "body": "{\n  \"id\": \"{{objectId}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Message created successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d54ffc88-ffc7-4ee5-bd2c-bf7da26d62f5",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5febffb4-0830-466f-874b-1fde257006a2",
      "documentation": "Get friendship messages",
      "method": "get",
      "endpoint": "friendships/:friendshipId/messages",
      "responses": [
        {
          "uuid": "65084340-e809-49fb-904f-5d8d9fbeee4d",
          "body": "{\n  \"messages\": [\n    {{#repeat 5 comma=true}}\n    {\n      \"id\": \"{{objectId}}\",\n      \"friendshipId\": \"{{objectId}}\",\n      \"userId\": \"{{objectId}}\",\n      \"timestamp\": \"{{now 'yyyy-MM-dd'}}T{{now 'HH:mm:ss.SSS'}}Z\",\n      \"text\": \"{{lorem 15}}\"\n    }\n    {{/repeat}}\n  ]\n}\n",
          "latency": 0,
          "statusCode": 200,
          "label": "Messages retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37055b7a-8e59-4ce5-9134-2ea7091f5248",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship doesn't exist\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship doesn't exist",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5a9ec90-b6fb-4aa2-9001-fcf45f8e1a83",
          "body": "{\n    \"statusCode\": 403,\n    \"message\": \"user doesn't belong to the friendship\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "User doesn't belong to the friendship",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb04c853-f4b6-4a0d-ae0d-3f4ed9e451e6",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7e4c19c6-f793-427a-9da7-4ebaef417c21",
      "documentation": "Delete a friendship message",
      "method": "delete",
      "endpoint": "friendships/:friendshipId/messages/:messageId",
      "responses": [
        {
          "uuid": "d05795ea-8ef6-4aaa-a608-5e7a7d81dfc8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Message deleted successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4df005cf-124f-415b-8612-aa7738da5176",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"friendship not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Friendship not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30f3bf95-afb2-4f23-b453-0b3c3c3c2b1f",
      "documentation": "Get conversations that were started with friends and groups",
      "method": "get",
      "endpoint": "conversations",
      "responses": [
        {
          "uuid": "b32b1033-366f-48b5-a2d9-0dcbaf0a0648",
          "body": "{\n  \"friendshipsMessages\": [\n    {{#repeat 5 comma=true}}\n    {\n      \"id\": \"{{objectId}}\",\n      \"friendshipId\": \"{{objectId}}\",\n      \"userId\": \"{{objectId}}\",\n      \"timestamp\": \"2022-08-08T09:08:25.868Z\",\n      \"text\": \"text message 1\"\n    }\n    {{/repeat}}\n  ],\n  \"groups\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Conversations retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7de4e0d5-0b2d-4408-b753-e295a09c0345",
      "documentation": "Create a new group",
      "method": "post",
      "endpoint": "groups",
      "responses": [
        {
          "uuid": "c5187975-4b15-4859-b39b-0bb14f3b01d7",
          "body": "{\n  \"id\": \"{{objectId}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Group successfully created",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0036036c-1127-496c-8971-99ff5d7dfcb4",
      "documentation": "",
      "method": "get",
      "endpoint": "groups",
      "responses": [
        {
          "uuid": "560b6ac9-5aaa-4afb-b620-cc580b9e7186",
          "body": "{\n  \"groups\": [\n    {{#repeat 5 comma=true}}\n    {\n      \"id\": \"{{objectId}}\",\n      \"name\": \"{{objectId}}\",\n      \"members\": [\n        {{#repeat 5 comma=true}}\n        \"{{objectId}}\"\n        {{/repeat}}\n      ]\n    }\n    {{/repeat}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Groups retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1b9eb85-5de0-4e58-b311-35acbe773ec1",
      "documentation": "Delete a group",
      "method": "delete",
      "endpoint": "groups/:id",
      "responses": [
        {
          "uuid": "a2eaa780-61d4-4429-9bfc-8617faa2e2ce",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Group deleted successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0549cf1d-5554-419b-9e56-c918641cd7d6",
      "documentation": "Get user data",
      "method": "get",
      "endpoint": "users/data",
      "responses": [
        {
          "uuid": "a8d50d33-5061-4f25-aa73-132ea54bf03b",
          "body": "{\n  \"id\": \"{{objectId}}\",\n  \"name\": \"{{firstName}} {{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"friendships\": [\n    {\n      \"id\": \"{{objectId}}\",\n      \"userId\": \"{{objectId}}\",\n      \"status\": \"pending\"\n    }\n  ],\n  \"users\": [\n    {\n      \"id\": \"{{objectId}}\",\n      \"name\": \"{{firstName}} {{lastName}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User data retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3236597e-a789-4649-8a60-06097572150a",
      "documentation": "Get user details",
      "method": "get",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "70719a18-e56c-4ce9-a2a4-48359e8c315c",
          "body": "{\n  \"name\": \"{{firstName}} {{lastName}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User details retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a356f327-1f6e-4c0f-9fba-3519d6f5c310",
          "body": "{\n    \"statusCode\": 404,\n    \"message\": \"user not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17790157-1029-4c56-a536-567e32a52c72",
      "documentation": "Get users details",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "01fce051-5483-4931-a904-e84946bd342f",
          "body": "{\n  \"users\": [\n    {{#repeat 5 comma=true}}\n    {\n      \"name\": \"{{firstName}} {{lastName}}\"\n    }\n    {{/repeat}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Users retrieved successfully",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "http://localhost:3000"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    },
    {
      "key": "Access-Control-Allow-Credentials",
      "value": "true"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}